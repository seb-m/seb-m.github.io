var searchIndex = {};
searchIndex['curve41417'] = {"items":[[0,"","curve41417","[Curve41417](http://safecurves.cr.yp.to/) elliptic curve.",null,null],[11,"clamp_41417","curve41417::common","",0,{"inputs":[{"name":"protbuf8"}],"output":null}],[0,"mont","curve41417","Montgomery-form Curve41417 representation",null,null],[5,"scalar_mult","curve41417::mont","Compute scalar multiplication",null,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"protbuf8"}}],[5,"scalar_mult_base","","Compute scalar multiplication with base point",null,{"inputs":[{"name":"t"}],"output":{"name":"protbuf8"}}],[5,"gen_key","","Generate a new secret key",null,{"inputs":[],"output":{"name":"protkey8"}}],[0,"ed","curve41417","Edwards-form Curve41417 representation",null,null],[3,"GroupElem","curve41417::ed","A group element i.e. a point in Edwards representation.",null,null],[11,"new","","Return a new group element with all its coordinates set to zero.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"groupelem"}}],[11,"zero","","Return a group element with all its coordinates set to zero.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"groupelem"}}],[11,"neutral","","Return the neutral point.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"groupelem"}}],[11,"base","","Return the base point `(x, 34)` of prime order `L`.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"groupelem"}}],[11,"gen_key","","Generate a new secret key at random. It is clamped before being\nreturned.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"protkey8"}}],[11,"pack","","Pack a group elem's coordinate `y` along with a sign bit taken from\nits `x` coordinate. This packed point may later be unpacked with\n`unpack()`.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"protbuf8"}}],[11,"unpack","","Unpack a Curve41417 point in Edwards representation from its\n`bytes` representation. `bytes` must hold a point packed obtained\nfrom a previous call to `pack()`.",1,{"inputs":[{"name":"groupelem"},{"name":"t"}],"output":{"name":"option"}}],[11,"pack_to_mont","","Convert and pack this point from Edwards coordinates to\nMontgomery's x-coordinate. This result may be used as input\npoint in `curve41417::mont` scalar multiplications.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"protbuf8"}}],[11,"unpack_from_mont","","Unpack point from packed Montgomery's x-coordinate along with a\nsign bit originally obtained from the method `sign_bit()`. This\nunpacking may be used in a similar case than\n[this](https://moderncrypto.org/mail-archive/curves/2014/000293.html),\nsee also\n[this](https://moderncrypto.org/mail-archive/curves/2015/000376.html)\ndiscussion.",1,{"inputs":[{"name":"groupelem"},{"name":"t"},{"name":"u8"}],"output":{"name":"option"}}],[11,"sign_bit","","Return the sign bit, a value equal to zero or one exclusively,\nassociated with the packed representation of this point. This\nreturned value may then be used as argument when calling\n`unpack_from_mont()`.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"u8"}}],[11,"scalar_mult_base","","Return a point `q` such that `q=n.BP` where `n` is a scalar value\napplied to the base point `BP`. Note that `n` is not clamped by this\nmethod before the multiplication is performed. Calling this method is\nequivalent to calling `GroupElem::base().scalar_mult(&n)`.",1,{"inputs":[{"name":"groupelem"},{"name":"t"}],"output":{"name":"groupelem"}}],[11,"double_scalar_mult","","Return a point `q` such that `q=n1.p1+n2.p2` where `n1` and `n2` are\nscalar values and `p1` and `p2` are group elements. Note that the\nvalues of `n1` and `n2` are not clamped by this method before their\nrespective multiplications.",1,{"inputs":[{"name":"groupelem"},{"name":"t"},{"name":"groupelem"},{"name":"t"},{"name":"groupelem"}],"output":{"name":"groupelem"}}],[11,"scalar_mult","","Return a point `q` such that `q=n.self` where `n` is the scalar\nvalue applied to the point `self`. Note that the value of `n` is\nnot clamped by this method before the scalar multiplication is\nperformed. Especially no cofactor multiplication is implicitly\napplied. Use `scalar_mult_cofactor()` prior to calling this method\nto explictly pre-cofactor this point.",1,{"inputs":[{"name":"groupelem"},{"name":"t"}],"output":{"name":"groupelem"}}],[11,"scalar_mult_cofactor","","Return a point `q` such that `q=8.self` where `8` is curve's cofactor\napplied to this point's instance.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"groupelem"}}],[11,"elligator_to_representation","","Use [Elligator](http://elligator.cr.yp.to/) to encode a curve\npoint to a byte-string representation.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"option"}}],[11,"elligator_from_representation","","Map a byte-string representation to a curve point. Return a valid\ngroup element if it produces to a well-defined point.",1,{"inputs":[{"name":"groupelem"},{"name":"t"}],"output":{"name":"option"}}],[11,"elligator_from_bytes","","Map a byte-string to a curve point. Return a valid group element\nif `s` produces to a well-defined point. The provided input is\nfirst reduced in `Fq`. For better uniformity of the distribution\nin `Fq` the input must be sufficiently large i.e. between [64, 104]\nbytes.",1,{"inputs":[{"name":"groupelem"},{"name":"t"}],"output":{"name":"option"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"groupelem"}}],[11,"default","","By default return the neutral point.",1,{"inputs":[{"name":"groupelem"}],"output":{"name":"groupelem"}}],[11,"fmt","","",1,{"inputs":[{"name":"groupelem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"groupelem"},{"name":"groupelem"}],"output":{"name":"bool"}}],[0,"sc","curve41417","Curve41417 scalar operations",null,null],[3,"ScalarElem","curve41417::sc","Scalar element used in scalar operations.",null,null],[11,"new_rand","","Generate a new random `ScalarElem` between `[0, L-1]`.\nUse `OsRng` (which uses `/dev/[u]random` on Unix) as PRNG.",2,{"inputs":[{"name":"scalarelem"}],"output":{"name":"scalarelem"}}],[11,"zero","","Return scalar value representing zero.",2,{"inputs":[{"name":"scalarelem"}],"output":{"name":"scalarelem"}}],[11,"len","","",2,{"inputs":[{"name":"scalarelem"}],"output":{"name":"usize"}}],[11,"pack","","Pack the current scalar value reduced `mod L`. Note: it is not\nuntil this method is called that the scalar element is reduced to\nits canonical form.",2,{"inputs":[{"name":"scalarelem"}],"output":{"name":"protbuf8"}}],[11,"is_zero","","Check if `self` is equal to `0`.",2,{"inputs":[{"name":"scalarelem"}],"output":{"name":"bool"}}],[11,"unpack","","Unpack scalar value `n`. It must represent a value strictly in\n`[0, L-1]` and it should not be expected to be reduced on unpacking.",2,{"inputs":[{"name":"scalarelem"},{"name":"t"}],"output":{"name":"option"}}],[11,"unpack_from_bytes","","Unpack bytes `b` as a scalar and reduce it `mod L`. It is expected\nto be of a large enough size in order to provide a good uniformity\nof distribution on reductions `mod L`. Thus `b` must be between\n`[64, 104]` bytes.",2,{"inputs":[{"name":"scalarelem"},{"name":"t"}],"output":{"name":"option"}}],[11,"reduce_from_bytes","","Unpack bytes `b` as a scalar, reduce it `mod L` and return the\npacked reduced result. See `unpack_from_bytes()` for more details\non performed unpacking.",2,{"inputs":[{"name":"scalarelem"},{"name":"t"}],"output":{"name":"protbuf8"}}],[11,"clone","","",2,{"inputs":[{"name":"scalarelem"}],"output":{"name":"scalarelem"}}],[6,"Output","","",null,null],[11,"index","","",2,{"inputs":[{"name":"scalarelem"},{"name":"usize"}],"output":{"name":"i64"}}],[11,"index_mut","","",2,{"inputs":[{"name":"scalarelem"},{"name":"usize"}],"output":{"name":"i64"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"from_i64","","",2,{"inputs":[{"name":"scalarelem"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",2,{"inputs":[{"name":"scalarelem"},{"name":"u64"}],"output":{"name":"option"}}],[11,"default","","Return the scalar value 0 as default.",2,{"inputs":[{"name":"scalarelem"}],"output":{"name":"scalarelem"}}],[11,"rand","","Generate a random `ScalarElem` between `[0, L-1]`, and its value\nis not clamped. Be sure to use a secure PRNG when calling this\nmethod. For instance `ScalarElem::new_rand()` uses urandom.",2,{"inputs":[{"name":"scalarelem"},{"name":"r"}],"output":{"name":"scalarelem"}}],[11,"fmt","","",2,{"inputs":[{"name":"scalarelem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"scalarelem"},{"name":"scalarelem"}],"output":{"name":"bool"}}],[17,"SCALAR_SIZE","curve41417","Size of Curve41417's scalar value",null,null],[17,"BYTES_SIZE","","Size of Curve41417's packed element",null,null],[8,"Scalar","","Trait to augment data buffers for scalar values",null,null],[10,"clamp_41417","","Clamp its bytes to set its value in the range\n`8.{1,2,3,...,2^410-1} + 2^413`.",3,{"inputs":[{"name":"scalar"}],"output":null}]],"paths":[[6,"ProtBuf8"],[3,"GroupElem"],[3,"ScalarElem"],[8,"Scalar"]]};
searchIndex['tars'] = {"items":[[0,"","tars","TARS",null,null],[3,"ProtBuf","","A protected Buffer",null,null],[3,"ProtKey","","A protected key",null,null],[3,"ProtKeyRead","","An RAII protected key with read access",null,null],[3,"ProtKeyWrite","","An RAII protected key with write access",null,null],[0,"malloc","","Protected memory allocation",null,null],[5,"malloc","tars::malloc","Allocate memory",null,null],[5,"calloc","","Allocate memory",null,null],[5,"malloc_key","","Allocate memory and allow changes to memory protections",null,null],[5,"realloc","","Reallocate memory",null,null],[5,"realloc_key","","Reallocate memory and allow changes to memory protections",null,null],[5,"free","","Free memory",null,null],[5,"protect_read","","Set memory protection to read-only",null,null],[5,"protect_write","","Set memory protection to write-only",null,null],[5,"protect_none","","Set memory protection to prevent any access",null,null],[0,"allocator","tars","Memory allocators",null,null],[3,"ProtectedBufferAllocator","tars::allocator","Protected buffer allocator",null,null],[3,"ProtectedKeyAllocator","","Protected key allocator",null,null],[6,"DefaultBufferAllocator","","Default buffer allocator",null,null],[6,"DefaultKeyAllocator","","Default key allocator",null,null],[8,"Allocator","","Base trait for memory allocators",null,null],[10,"allocate","","Allocate `size` bytes of memory whose base address is a multiple\nof `align`.",0,null],[10,"deallocate","","Deallocate `size` bytes memory at `ptr`. `size` and `align` must\nbe the same values used when `allocate` was called.",0,null],[8,"KeyAllocator","","Trait for keys allocators",null,null],[10,"protect_read","","Set memory protection of pages allocated at `ptr` to read-only.",1,null],[10,"protect_write","","Set memory protection of pages allocated at `ptr` to write-only.\nNote that on most architectures write-only cannot be enforced\nand also allows read access.",1,null],[10,"protect_none","","Set memory protection of pages allocated at `ptr` to prevent\nany access.",1,null],[11,"allocate","","",2,null],[11,"deallocate","","",2,null],[11,"allocate","","",3,null],[11,"deallocate","","",3,null],[11,"protect_read","","",3,null],[11,"protect_write","","",3,null],[11,"protect_none","","",3,null],[11,"len","tars","Return the length i.e. the number of elements `T` of this buffer.",4,{"inputs":[{"name":"protbuf"}],"output":{"name":"usize"}}],[11,"new","","New allocated buffer with unitilialized memory.",4,{"inputs":[{"name":"protbuf"},{"name":"usize"}],"output":{"name":"protbuf"}}],[11,"new_zero","","New allocated buffer with its memory initialized with bytes of\nvalue zero.",4,{"inputs":[{"name":"protbuf"},{"name":"usize"}],"output":{"name":"protbuf"}}],[11,"new_rand","","Allocate a new buffer of size `length` and fill it with randomly\ngenerated bytes. Use `rng` as random number generator.",4,{"inputs":[{"name":"protbuf"},{"name":"usize"},{"name":"r"}],"output":{"name":"protbuf"}}],[11,"new_rand_os","","Allocate a new buffer of size `length` and fill it with randomly\ngenerated bytes. Use an instance of `OsRng` as random number\ngenerator.",4,{"inputs":[{"name":"protbuf"},{"name":"usize"}],"output":{"name":"protbuf"}}],[11,"from_slice","","New buffer with elements copied from slice `values`.",4,null],[11,"from_raw_parts","","New buffer from unsafe buffer.",4,null],[11,"from_slices","","Build a new instance by concatenating slice `items` together.",4,null],[11,"from_bufs","","Build a new instance by concatenating `ProtBuf` `items` together.",4,null],[11,"as_mut_slice","","Return a mutable slice into `self`.",4,null],[11,"cast_to_slice","","Cast `self` to another compatible type and return a slice on it.",4,null],[11,"cast_to_slice_mut","","Cast `self` to another compatible type and return a mut slice on it.",4,null],[11,"as_slice","","Return a slice into `self`.",4,null],[11,"into_key","","Transform `self` into a protected key `ProtKey`.",4,{"inputs":[{"name":"protbuf"}],"output":{"name":"protkey"}}],[11,"from_bytes","","New buffer from bytes.",4,null],[11,"drop","","",4,{"inputs":[{"name":"protbuf"}],"output":null}],[11,"clone","","",4,{"inputs":[{"name":"protbuf"}],"output":{"name":"protbuf"}}],[11,"index","","",4,{"inputs":[{"name":"protbuf"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",4,{"inputs":[{"name":"protbuf"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",4,null],[11,"index","","",4,null],[11,"index","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index_mut","","",4,null],[11,"index_mut","","",4,null],[11,"index_mut","","",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"eq","","",4,{"inputs":[{"name":"protbuf"},{"name":"protbuf"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"protbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Take ownership of `prot_buf` and transform it into a `ProtKey`. By\ndefault prevent any access.",5,{"inputs":[{"name":"protkey"},{"name":"protbuf"}],"output":{"name":"protkey"}}],[11,"from_buf","","Consume and copy `prot_buf` to force using `ProtKey`'s allocator.\nIf `prot_buf` already uses a `KeyAllocator` there is no need to make\na copy so directly call the default cstor `new` instead.",5,{"inputs":[{"name":"protkey"},{"name":"protbuf"}],"output":{"name":"protkey"}}],[11,"read","","Return a wrapper to the key in read mode. This method `panic!` if\nthis key is already accessed in write mode.",5,{"inputs":[{"name":"protkey"}],"output":{"name":"protkeyread"}}],[11,"try_read","","Return a wrapper to the key in read mode. Return `None`\nif the key is already accessed in write mode.",5,{"inputs":[{"name":"protkey"}],"output":{"name":"option"}}],[11,"read_with","","Access the key in read mode and pass a reference to closure `f`.\nThe key can only be read during this call. This method will `panic!`\nif a read access cannot be acquired on this key.",5,{"inputs":[{"name":"protkey"},{"name":"f"}],"output":null}],[11,"write","","Return a wrapper to the key in write mode. This method `panic!` if\nthe key is already currently accessed in read or write mode.",5,{"inputs":[{"name":"protkey"}],"output":{"name":"protkeywrite"}}],[11,"try_write","","Return a wrapper to the key in write mode. Return `None`\nif the key is already accessed in read or write mode.",5,{"inputs":[{"name":"protkey"}],"output":{"name":"option"}}],[11,"write_with","","Access the key in write mode and pass a reference to closure `f`.\nThe key can only be writtent during this call. This method will\n`panic!` if a write access cannot be acquired on this key.",5,{"inputs":[{"name":"protkey"},{"name":"f"}],"output":null}],[11,"drop","","",5,{"inputs":[{"name":"protkey"}],"output":null}],[11,"clone","","",5,{"inputs":[{"name":"protkey"}],"output":{"name":"protkey"}}],[11,"eq","","",5,{"inputs":[{"name":"protkey"},{"name":"protkey"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"protkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_it","","Clone this instance.",6,{"inputs":[{"name":"protkeyread"}],"output":{"name":"protkeyread"}}],[11,"drop","","",6,{"inputs":[{"name":"protkeyread"}],"output":null}],[11,"deref","","",6,{"inputs":[{"name":"protkeyread"}],"output":{"name":"protbuf"}}],[11,"as_slice","","",6,null],[11,"eq","","",6,{"inputs":[{"name":"protkeyread"},{"name":"protkeyread"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"protkeyread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",7,{"inputs":[{"name":"protkeywrite"}],"output":null}],[11,"deref","","",7,{"inputs":[{"name":"protkeywrite"}],"output":{"name":"protbuf"}}],[11,"deref_mut","","",7,{"inputs":[{"name":"protkeywrite"}],"output":{"name":"protbuf"}}],[6,"ProtBuf8","","Buffer of bytes",null,null],[6,"ProtKey8","","Key of bytes",null,null]],"paths":[[8,"Allocator"],[8,"KeyAllocator"],[3,"ProtectedBufferAllocator"],[3,"ProtectedKeyAllocator"],[3,"ProtBuf"],[3,"ProtKey"],[3,"ProtKeyRead"],[3,"ProtKeyWrite"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"OsRng","","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[6,"Item","","",null,null],[11,"next","","",30,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[6,"Item","","",null,null],[11,"next","","",31,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"rand","","",32,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",33,null],[11,"from_seed","","",33,null],[11,"clone","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",34,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade.",null,null],[3,"LogRecord","","The \"payload\" of a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[12,"module_path","","The module path of the message.",0,null],[12,"file","","The source file containing the message.",0,null],[12,"line","","The line containing the message.",0,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",1,null],[13,"Warn","","The \"warn\" level.",1,null],[13,"Info","","The \"info\" level.",1,null],[13,"Debug","","The \"debug\" level.",1,null],[13,"Trace","","The \"trace\" level.",1,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",2,null],[13,"Error","","Corresponds to the `Error` log level.",2,null],[13,"Warn","","Corresponds to the `Warn` log level.",2,null],[13,"Info","","Corresponds to the `Trace` log level.",2,null],[13,"Debug","","Corresponds to the `Debug` log level.",2,null],[13,"Trace","","Corresponds to the `Trace` log level.",2,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"enabled","","Determines if the current logger will ignore a log message at the specified\nlevel from the specified module.",null,{"inputs":[{"name":"loglevel"},{"name":"str"}],"output":{"name":"bool"}}],[5,"log","","Logs a message.",null,{"inputs":[{"name":"loglevel"},{"name":"loglocation"},{"name":"arguments"}],"output":null}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message sent at the specified level from the\nspecified module would be logged.",3,{"inputs":[{"name":"log"},{"name":"loglevel"},{"name":"str"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",3,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[6,"Err","","",null,null],[11,"from_str","","",1,{"inputs":[{"name":"loglevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",1,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",1,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",2,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",2,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[6,"Err","","",null,null],[11,"from_str","","",2,{"inputs":[{"name":"loglevelfilter"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",2,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",2,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"new","","Creates a new `LogRecord`.",4,{"inputs":[{"name":"logrecord"},{"name":"loglevel"},{"name":"loglocation"},{"name":"arguments"}],"output":{"name":"logrecord"}}],[11,"args","","The message body.",4,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"location","","The location of the log directive.",4,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"fmt","","",5,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",5,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",5,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",6,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[3,"LogLocation"],[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"__unused1","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused2","","",1,null],[12,"gl_pathv","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[12,"__unused6","","",1,null],[12,"__unused7","","",1,null],[12,"__unused8","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"sighandler_t","","",null,null],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_len","","",4,null],[12,"sa_family","","",4,null],[12,"sa_data","","",4,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",5,null],[12,"ss_family","","",5,null],[12,"__ss_pad1","","",5,null],[12,"__ss_align","","",5,null],[12,"__ss_pad2","","",5,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",6,null],[12,"sin_family","","",6,null],[12,"sin_port","","",6,null],[12,"sin_addr","","",6,null],[12,"sin_zero","","",6,null],[3,"in_addr","","",null,null],[12,"s_addr","","",7,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",8,null],[12,"sin6_family","","",8,null],[12,"sin6_port","","",8,null],[12,"sin6_flowinfo","","",8,null],[12,"sin6_addr","","",8,null],[12,"sin6_scope_id","","",8,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",9,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",10,null],[12,"imr_interface","","",10,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",11,null],[12,"ipv6mr_interface","","",11,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",12,null],[12,"ai_family","","",12,null],[12,"ai_socktype","","",12,null],[12,"ai_protocol","","",12,null],[12,"ai_addrlen","","",12,null],[12,"ai_canonname","","",12,null],[12,"ai_addr","","",12,null],[12,"ai_next","","",12,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",13,null],[12,"sun_family","","",13,null],[12,"sun_path","","",13,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",14,null],[12,"ifa_name","","",14,null],[12,"ifa_flags","","",14,null],[12,"ifa_addr","","",14,null],[12,"ifa_netmask","","",14,null],[12,"ifa_dstaddr","","",14,null],[12,"ifa_data","","",14,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",15,null],[12,"st_mode","","",15,null],[12,"st_nlink","","",15,null],[12,"st_ino","","",15,null],[12,"st_uid","","",15,null],[12,"st_gid","","",15,null],[12,"st_rdev","","",15,null],[12,"st_atime","","",15,null],[12,"st_atime_nsec","","",15,null],[12,"st_mtime","","",15,null],[12,"st_mtime_nsec","","",15,null],[12,"st_ctime","","",15,null],[12,"st_ctime_nsec","","",15,null],[12,"st_birthtime","","",15,null],[12,"st_birthtime_nsec","","",15,null],[12,"st_size","","",15,null],[12,"st_blocks","","",15,null],[12,"st_blksize","","",15,null],[12,"st_flags","","",15,null],[12,"st_gen","","",15,null],[12,"st_lspare","","",15,null],[12,"st_qspare","","",15,null],[3,"utimbuf","","",null,null],[12,"actime","","",16,null],[12,"modtime","","",16,null],[3,"pthread_attr_t","","",null,null],[12,"__sig","","",17,null],[12,"__opaque","","",17,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[0,"extra","libc::types::os::arch","",null,null],[3,"mach_timebase_info","libc::types::os::arch::extra","",null,null],[12,"numer","","",18,null],[12,"denom","","",18,null],[6,"mach_timebase_info_data_t","","",null,null],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_ERROR","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"O_DSYNC","libc::consts::os::extra","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"MAP_STACK","","",null,null],[17,"IPPROTO_RAW","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"ioctl","libc::funcs::bsd44","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"getdtablesize","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null],[5,"realpath","","",null,null],[0,"extra","libc::funcs","",null,null],[5,"_NSGetExecutablePath","libc::funcs::extra","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"mach_timebase_info"]]};
initSearch(searchIndex);
